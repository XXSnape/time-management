services:
  postgres:
    image: postgres:14.8-alpine3.18
    ports:
      - 5432:5432
    volumes:
      - ./db:/var/lib/postgresql/data
    env_file:
      - ./backend/.env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 5s
      timeout: 3s
      retries: 3

  backend:
    container_name: backend
    build: ./backend
    ports:
      - "8000:8000"
    volumes:
      - ./certs:/app/certs
    depends_on:
      postgres:
        condition: service_healthy
    restart: on-failure

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./backend/static:/var/www/static
      - ./backend/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "nginx", "-t" ]
      interval: 5s
      timeout: 3s
      retries: 3


  redis:
    image: redis:7.4-alpine
    ports:
      - 6379:6379
    volumes:
      - ./redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 3

  rabbitmq:
    image: rabbitmq:alpine
    ports:
      - 5672:5672
    volumes:
      - ./rabbitmq_data:/data
    env_file:
      - ./bot/.env
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 5s
      timeout: 3s
      retries: 3

  bot:
    container_name: bot
    build: ./bot
    depends_on:
       redis:
         condition: service_healthy
       rabbitmq:
         condition: service_healthy
       backend:
         condition: service_started
    volumes:
      - ./bot:/bot
    restart: on-failure
    command: sh -c "
      pybabel compile -d locales -D time_management_bot &&
      alembic upgrade head &&
      python main.py
      "

  faststream:
    build: ./bot
    depends_on:
      rabbitmq:
        condition: service_healthy
      bot:
        condition: service_started

    command: sh -c "
      faststream run core.tasks.reminder:app
      "
    restart: on-failure