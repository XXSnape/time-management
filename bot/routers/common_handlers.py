from aiogram.types import (
    ErrorEvent,
    Message,
    CallbackQuery,
    TelegramObject,
)
from aiogram_dialog import DialogManager
from aiogram.utils.i18n import gettext as _

from core.commands import Commands


async def end_dialog(
    dialog_manager: DialogManager,
    event: TelegramObject,
    delete_markup: bool,
):
    if dialog_manager.has_context():
        await dialog_manager.done()
        return
    if delete_markup:
        if isinstance(event, Message):
            await event.delete_reply_markup()
        elif isinstance(event, CallbackQuery):
            await event.message.delete_reply_markup()


async def on_server_is_unavailable(
    event: ErrorEvent, dialog_manager: DialogManager
):
    delete_markup = event.exception.delete_markup
    event = event.update.event

    await event.bot.send_message(
        chat_id=event.from_user.id,
        text=_(
            "üò•–ò–∑–≤–∏–Ω–∏—Ç–µ, —Å–µ—Ä–≤–µ—Ä –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!"
        ),
    )
    await end_dialog(
        dialog_manager=dialog_manager,
        event=event,
        delete_markup=delete_markup,
    )


async def on_unauthorized(
    event: ErrorEvent, dialog_manager: DialogManager
):
    delete_markup = event.exception.delete_markup
    event = event.update.event
    await event.bot.send_message(
        chat_id=event.from_user.id,
        text=_(
            "‚åõ–í–∏–¥–∏–º–æ, –≤–∞—à–∞ —Å–µ—Å—Å–∏—è —É—Å—Ç–∞—Ä–µ–ª–∞! "
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /{command}"
        ).format(command=Commands.auth.name),
    )
    await end_dialog(
        dialog_manager=dialog_manager,
        event=event,
        delete_markup=delete_markup,
    )


async def on_data_is_outdated(
    event: ErrorEvent, dialog_manager: DialogManager
):
    event = event.update.event
    await event.bot.send_message(
        chat_id=event.from_user.id,
        text=_(
            "‚ö†Ô∏è–î–∞–Ω–Ω—ã–µ –∫–∞–∂—É—Ç—Å—è —É—Å—Ç–∞—Ä–µ–≤—à–∏–º–∏! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É —Å–Ω–æ–≤–∞"
        ).format(command=Commands.auth.name),
    )
    await end_dialog(
        dialog_manager=dialog_manager,
        event=event,
        delete_markup=True,
    )
